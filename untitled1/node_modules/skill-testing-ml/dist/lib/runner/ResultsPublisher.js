function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var HTTP = require("../util/HTTP");

var url = require("url");

var {
  cloneDeep
} = require("lodash");

var postDataIntoEndpoint = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator(function* (payload) {
    var baseUrl = process.env.BESPOKEN_API_BASE_URL || "https://bespoken-api.bespoken.tools";
    var method = "POST";
    var headers = {
      "Content-Type": "application/json"
    };
    var endpoint = url.parse(baseUrl).resolveObject("/reporting/testResults");
    var {
      hostname: host,
      port,
      protocol,
      path
    } = endpoint;
    return HTTP.post({
      headers,
      host,
      method,
      path,
      port,
      protocol
    }, payload);
  });

  return function postDataIntoEndpoint(_x) {
    return _ref.apply(this, arguments);
  };
}();

var ResultsPublisher = /*#__PURE__*/function () {
  function ResultsPublisher() {
    _classCallCheck(this, ResultsPublisher);
  }

  _createClass(ResultsPublisher, [{
    key: "publishResults",
    value: function () {
      var _publishResults = _asyncToGenerator(function* (data) {
        var payload = JSON.parse(JSON.stringify(cloneDeep(data), function (key, value) {
          if (key === "_testSuite") {
            value._tests = undefined;
            return value;
          }

          if (key === "_interactions" && Array.isArray(value)) {
            return value.map(e => {
              delete e._test;
              return e;
            });
          }

          if (key === "_interaction" && Array.isArray(value)) {
            return value.map(e => {
              delete e._test;
              return e;
            });
          }

          if (key === "_assertions" && Array.isArray(value)) {
            return value.map(e => {
              delete e._interaction;
              return e;
            });
          }

          return value;
        }));
        return postDataIntoEndpoint(payload);
      });

      function publishResults(_x2) {
        return _publishResults.apply(this, arguments);
      }

      return publishResults;
    }()
  }]);

  return ResultsPublisher;
}();

module.exports = {
  ResultsPublisher
};
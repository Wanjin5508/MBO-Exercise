"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@parcel/core");
const Constants_1 = require("../processor/Constants");
const IO_1 = require("./IO");
const Dependencies_1 = require("../processor/Dependencies");
const path = require("path");
const resultDir = "web/temp/";
const obtainWebFile = (name) => {
    return IO_1.IO.readFileSync(path.resolve(__dirname, "./../../web", name));
};
const obtainJsRenderFile = (name) => {
    return IO_1.IO.readFileSync(path.resolve(__dirname, "./../render/", name));
};
const addThirdParty = (dependency) => {
    const location = require.resolve(dependency.requireDir + dependency.file);
    IO_1.IO.writeFileSync(dependency.targetDir + dependency.file, IO_1.IO.readFileSync(location));
};
IO_1.IO.mkdirsSync(resultDir);
IO_1.IO.copyFileSync("web/template-parcel.html", resultDir + "template.html");
const cssDir = resultDir + Constants_1.Constants.CSS_DIR;
IO_1.IO.mkdirsSync(cssDir);
IO_1.IO.writeFileSync(cssDir + Constants_1.Constants.JEST_STARE_CSS, obtainWebFile(Constants_1.Constants.JEST_STARE_CSS));
const jsDir = resultDir + Constants_1.Constants.JS_DIR;
IO_1.IO.mkdirsSync(jsDir);
IO_1.IO.writeFileSync(jsDir + Constants_1.Constants.JEST_STARE_JS, obtainJsRenderFile(Constants_1.Constants.JEST_STARE_JS));
Dependencies_1.Dependencies.THIRD_PARTY_DEPENDENCIES.forEach((dependency) => {
    const updatedDependency = Object.assign({}, ...[dependency]);
    updatedDependency.targetDir = resultDir + dependency.targetDir;
    addThirdParty(updatedDependency);
});
const bundler = new core_1.default({
    entries: resultDir + "template.html",
    defaultConfig: '@parcel/config-default',
    mode: 'production',
    targets: {
        legacy: {
            engines: {
                "browsers": "> 0.5%, last 2 versions, not dead"
            },
            distDir: "web/dist",
        },
    },
});
try {
    bundler.run().then(({ bundleGraph, buildTime }) => {
        try {
            IO_1.IO.copyFileSync("web/dist/template.html", "web/templateInlineSource.html");
            IO_1.IO.deleteFolderSync("web/dist");
            IO_1.IO.deleteFolderSync("web/temp");
        }
        catch (error) {
            console.log("error while parce bundle", error);
            throw error;
        }
    });
}
catch (error) {
    console.log("error while parce bundle", error);
    throw error;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2VuZXJhdGVJbmxpbmVSZXBvcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvR2VuZXJhdGVJbmxpbmVSZXBvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx1Q0FBaUM7QUFFakMsc0RBQW1EO0FBQ25ELDZCQUEwQjtBQUMxQiw0REFBeUQ7QUFDekQsNkJBQTZCO0FBRzdCLE1BQU0sU0FBUyxHQUFHLFdBQVcsQ0FBQztBQUU5QixNQUFNLGFBQWEsR0FBRyxDQUFDLElBQVksRUFBVSxFQUFFO0lBQzNDLE9BQU8sT0FBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUN6RSxDQUFDLENBQUM7QUFFRixNQUFNLGtCQUFrQixHQUFHLENBQUMsSUFBWSxFQUFVLEVBQUU7SUFDaEQsT0FBTyxPQUFFLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQzFFLENBQUMsQ0FBQztBQUVGLE1BQU0sYUFBYSxHQUFHLENBQUMsVUFBaUMsRUFBRSxFQUFFO0lBQ3hELE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUUsT0FBRSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxJQUFJLEVBQUUsT0FBRSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQ3hGLENBQUMsQ0FBQztBQUdGLE9BQUUsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDekIsT0FBRSxDQUFDLFlBQVksQ0FBQywwQkFBMEIsRUFBRSxTQUFTLEdBQUcsZUFBZSxDQUFDLENBQUM7QUFHekUsTUFBTSxNQUFNLEdBQUcsU0FBUyxHQUFHLHFCQUFTLENBQUMsT0FBTyxDQUFDO0FBQzdDLE9BQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDdEIsT0FBRSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcscUJBQVMsQ0FBQyxjQUFjLEVBQUUsYUFBYSxDQUFDLHFCQUFTLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztBQUc3RixNQUFNLEtBQUssR0FBRyxTQUFTLEdBQUcscUJBQVMsQ0FBQyxNQUFNLENBQUM7QUFDM0MsT0FBRSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNyQixPQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxxQkFBUyxDQUFDLGFBQWEsRUFBRSxrQkFBa0IsQ0FBQyxxQkFBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7QUFHL0YsMkJBQVksQ0FBQyx3QkFBd0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxVQUFVLEVBQUUsRUFBRTtJQUN6RCxNQUFNLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQzdELGlCQUFpQixDQUFDLFNBQVMsR0FBRyxTQUFTLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQztJQUMvRCxhQUFhLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUNyQyxDQUFDLENBQUMsQ0FBQztBQUVILE1BQU0sT0FBTyxHQUFHLElBQUksY0FBTSxDQUFDO0lBQ3ZCLE9BQU8sRUFBRSxTQUFTLEdBQUcsZUFBZTtJQUNwQyxhQUFhLEVBQUUsd0JBQXdCO0lBQ3ZDLElBQUksRUFBRSxZQUFZO0lBQ2xCLE9BQU8sRUFBRTtRQUNMLE1BQU0sRUFBRTtZQUNKLE9BQU8sRUFBRTtnQkFDTCxVQUFVLEVBQUUsbUNBQW1DO2FBQ2xEO1lBQ0QsT0FBTyxFQUFFLFVBQVU7U0FDdEI7S0FDSjtDQUNKLENBQUMsQ0FBQztBQUdILElBQUk7SUFDQSxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLEVBQUUsRUFBRTtRQUM5QyxJQUFJO1lBQ0EsT0FBRSxDQUFDLFlBQVksQ0FBQyx3QkFBd0IsRUFBRSwrQkFBK0IsQ0FBQyxDQUFDO1lBQzNFLE9BQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNoQyxPQUFFLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDbkM7UUFBQyxPQUFPLEtBQUssRUFBRTtZQUVaLE9BQU8sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDL0MsTUFBTSxLQUFLLENBQUM7U0FDZjtJQUNMLENBQUMsQ0FBQyxDQUFBO0NBRUw7QUFBQyxPQUFPLEtBQUssRUFBRTtJQUVaLE9BQU8sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDL0MsTUFBTSxLQUFLLENBQUM7Q0FDZiJ9
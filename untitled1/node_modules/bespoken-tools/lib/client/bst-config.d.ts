import { ProxyType } from "./bst-proxy";
export declare class BSTConfig {
    configuration: any;
    process: any;
    static load(createSource?: boolean): Promise<BSTConfig>;
    getMessages(): any;
    save(): void;
    static getBstVersion(): any;
    sourceID(): string;
    secretKey(): string;
    applicationID(): string;
    updateApplicationID(applicationID: string): void;
    updateVirtualDeviceToken(virtualDeviceToken: string): void;
    updateMessages(messages: any[]): void;
    deleteSession(): void;
    saveSession(session: any): void;
    loadSession(): any;
    virtualDeviceToken(): string;
    commit(): void;
    private loadFromJSON;
    private static configDirectory;
    private static configPath;
    private static sessionPath;
    private static bootstrapIfNeeded;
    private static updateConfig;
    private static saveConfig;
    private static createConfig;
    private static createSpokesPipe;
    private static createSource;
    private static createExternalResources;
    private static fetchMessages;
}
export declare class BSTProcess {
    port: number;
    proxyType: ProxyType;
    pid: number;
    constructor();
    static running(): BSTProcess;
    static isRunning(pid: number): boolean;
    static processPath(): string;
    static run(port: number, proxyType: ProxyType, pid: number): BSTProcess;
    kill(): boolean;
    private loadJSON;
    private json;
}

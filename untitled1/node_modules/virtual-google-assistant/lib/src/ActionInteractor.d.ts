import { ActionRequest } from "./ActionRequest";
import { InteractionModel } from "./InteractionModel";
export declare abstract class ActionInteractor {
    protected interactionModel: InteractionModel;
    private locale;
    protected requestFilters: RequestFilter[];
    protected context: any[];
    constructor(interactionModel: InteractionModel, locale: string);
    spoken(utteranceString: string): Promise<any>;
    resetContext(): void;
    launched(): Promise<any>;
    intended(intentName: string, slots?: any): Promise<any>;
    addFilter(requestFilter: RequestFilter): void;
    resetFilters(): void;
    callSkill(serviceRequest: ActionRequest): Promise<any>;
    protected abstract invoke(requestJSON: any): Promise<any>;
    private callSkillWithIntent;
}
export declare type RequestFilter = (request: any) => void;
